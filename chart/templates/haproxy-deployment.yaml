{{- if .Values.haproxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-haproxy
  namespace: {{ .Values.namespace }}
  labels:
    release: {{ template "version" .}}
    chart: "{{ .Chart.Name }}"
    app: "{{ .Release.Name }}-haproxy"
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: {{ .Values.haproxy.replicas }}
  selector:
    matchLabels:
      release: {{ template "version" .}}
      chart: "{{ .Chart.Name }}"
      app: "{{ .Release.Name }}-haproxy"
  template:
    metadata:
      labels:
        release: {{ template "version" .}}
        chart: "{{ .Chart.Name }}"
        app: "{{ .Release.Name }}-haproxy"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
      {{- if .Values.podAnnotations }}
        ## Custom pod annotations
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      containers:
        - name: haproxy
          image: {{ .Values.haproxy.image.repository }}:{{ .Values.haproxy.image.tag }}
          imagePullPolicy: {{ .Values.haproxy.image.pullPolicy }}
          resources:
{{ toYaml .Values.haproxy.resources | indent 12 }}
          volumeMounts:
          - name: config
            mountPath: /etc/haproxy/haproxy.cfg
            subPath: haproxy.cfg
          livenessProbe:
            httpGet:
              path: /stats
              port: 8404
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /stats
              port: 8404
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
          - containerPort: 80
            name: tcp
            protocol: TCP
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }}-haproxy
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
